name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check for security vulnerabilities
      run: npm audit --audit-level=high
      continue-on-error: true
    
    - name: Run tests
      run: npm test
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Check test coverage thresholds
      run: |
        npx jest --coverage --coverageReporters="json-summary"
        node -e "
        const coverage = require('./coverage/coverage-summary.json');
        const thresholds = { branches: 80, functions: 80, lines: 80, statements: 80 };
        let failed = false;
        
        Object.entries(thresholds).forEach(([key, threshold]) => {
          const pct = coverage.total[key].pct;
          if (pct < threshold) {
            console.error(\`❌ \${key} coverage (\${pct}%) is below threshold (\${threshold}%)\`);
            failed = true;
          } else {
            console.log(\`✅ \${key} coverage: \${pct}%\`);
          }
        });
        
        if (failed) process.exit(1);
        "
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-multiple-node:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x, 23.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test